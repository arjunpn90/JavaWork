import java.util.Comparator;
import java.util.PriorityQueue;


public class FindRunningMedian {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	
	public static double[] getMedians(int[] array){
		PriorityQueue<Integer> lowers = new PriorityQueue<Integer>(new Comparator<Integer>() {
			public int compare(Integer a, Integer b){
				return -1 * a.compareTo(b);
			}
		});
		PriorityQueue<Integer> highers = new PriorityQueue<Integer>();
		double[] medians = new double[array.length];
		for (int i=0; i<array.length; i++){
			addNumber(array[i], lowers, highers);
			rebalance(lowers, highers);
			medians[i] = getMedian(lowers, highers);
		}
		return medians;
	}	
	
	private static void addNumber(Integer number, PriorityQueue<Integer> lowers, PriorityQueue<Integer> highers){
		if (lowers.size() ==0 || number < lowers.peek()){
			lowers.add(number);
		}else{
			highers.add(number);
		}
	}
	
	private static void rebalance(PriorityQueue<Integer> lowers, PriorityQueue<Integer> highers){
		
	}
	
	private static double getMedian(PriorityQueue<Integer> lowers, PriorityQueue<Integer> highers){
		
	}
}
